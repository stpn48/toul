// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workout {
  id                String     @id @default(uuid())
  createdAt         DateTime   @default(now())
  timesCompleted    Int        @default(0)
  userId            String // The userId of the user who created the workout
  name              String
  description       String?
  difficulty        String
  lastCompletedAt   DateTime?
  estimatedDuration String
  exercises         Exercise[]
}

model Exercise {
  id              String    @id @default(uuid())
  createdAt       DateTime  @default(now())
  timesCompleted  Int       @default(0)
  repHistory      Int[]     @default([])
  workoutId       String // Id of the workout this exercise belongs to
  name            String
  lastCompletedAt DateTime?
  description     String?
  workout         Workout   @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  sets            Set[]
  userId          String
}

model Set {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  name        String
  targetReps  Int
  exerciseId  String
  isWarmupSet Boolean
  exercise    Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)
}
